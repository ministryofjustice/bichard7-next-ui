version: 2.1

commands:
  npm_install:
    description: Check out the repo and install the node dependencies
    steps:
      - run:
          name: Hash package lock
          command: ./.circleci/scripts/hash-package-lock.sh
      - restore_cache:
          name: Load node_modules from the cache if they haven't changed
          keys:
            - v1-npm-deps-{{ checksum "package-lock.json.md5" }}
            - v1-npm-deps-
      - run:
          name: Install node dependencies
          command: npm i

  clone_bichard_repo:
    description: Check out the bichard7-next repo
    steps:
      - add_ssh_keys:
          fingerprints:
            - cd:21:43:ca:b8:83:a7:96:34:ab:96:d7:97:80:fa:25
      - run:
          name: Clone Bichard7 Next
          command: git clone --depth 1 git@github.com:ministryofjustice/bichard7-next.git ~/bichard7-next

  run_ui:
    description: Run the UI container and dependencies
    steps:
      - run:
          name: Spin up UI container and dependencies
          working_directory: ~/bichard7-next
          command: make run-pg
  
  run_postgres:
    description: Run the PostgreSQL database
    steps:
      - run:
          name: Spin up the PostgreSQL database
          working_directory: ~/bichard7-next
          command: make run-pg

  use_nvm_version:
    description: Install nvm and use configured node version
    steps:
      - run:
          label: Use nvm for a specific node version...
          command: |
            set +e
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install
            nvm use
jobs:
  lint:
    docker:
      - image: cimg/node:16.12.0
    resource_class: medium
    working_directory: ~
    steps:
      - checkout
      - npm_install
      - save_cache:
          name: Save node_modules cache
          key: v1-npm-deps-{{ checksum "package-lock.json.md5" }}
          paths: node_modules
      - attach_workspace:
          at: .
      - run:
          name: Check the code for linting errors
          command: npm run lint

  unit_test:
    docker:
      - image: cimg/node:16.12.0
    resource_class: medium
    working_directory: ~
    steps:
      - checkout
      - npm_install
      - attach_workspace:
          at: .
      - run:
          name: Run code-based unit tests
          command: npm run test:unit

  integration_test:
    machine:
      image: ubuntu-2004:2022.04.1
      docker_layer_caching: true
    working_directory: ~
    steps:
      - checkout
      - use_nvm_version
      - npm_install
      - attach_workspace:
          at: .
      - clone_bichard_repo
      - run_postgres
      - run:
          name: Run integration tests
          command: npm run test:integration

  ui_test:
    docker:
      - image: cimg/node:16.12.0
    resource_class: medium
    working_directory: ~
    environment:
      TZ: "Europe/London"
    steps:
      - checkout
      - npm_install
      - attach_workspace:
          at: .
      - run:
          name: Install Playwright in the background
          command: ./.circleci/scripts/install-playwright.sh
          background: true
      - run:
          name: Build Storybook
          command: npm run build-storybook
      - run:
          name: Wait for Playwright installation to finish
          command: until [ -f playwrightInstalled ]; do sleep 1; done
          no_output_timeout: 5m
      - run:
          name: Run visual unit tests
          command: npm run test:ui:unit:ci

  publish_chromatic:
    docker:
      - image: cimg/node:16.12.0
    resource_class: medium
    working_directory: ~
    steps:
      - checkout
      - npm_install
      - attach_workspace:
          at: .
      - run:
          name: Run Chromatic
          command: npx chromatic --exit-zero-on-changes

  build_and_e2e_test:
    machine:
      image: ubuntu-2004:2022.04.1
      docker_layer_caching: true
    resource_class: medium
    working_directory: ~
    steps:
      - checkout
      - clone_bichard_repo
      - run:
          name: Build the UI application in the background
          command: ./.circleci/scripts/build-ui.sh
          background: true
      - run:
          name: Install Cypress
          command: ./.circleci/scripts/install-cypress.sh 2>&1
          background: true
      - use_nvm_version
      - npm_install
      - run:
          name: Install GOV.UK Assets
          command: npm run install:assets
      - attach_workspace:
          at: .
      - run:
          name: Wait for cypress install to finish
          command: until [ -f cypressInstalled ]; do sleep 1; done
          no_output_timeout: 5m
      - run:
          name: Retrying installing Cypress
          command: ./.circleci/scripts/install-cypress.sh
      - run:
          name: Wait for UI build to finish
          command: until [ -f uiBuilt ]; do sleep 1; done
          no_output_timeout: 15m
      - run:
          name: Run UI container
          working_directory: ~/bichard7-next
          command: make run-ui
          background: true
      - run:
          name: Wait for UI to start
          command: npx wait-on --config ./.circleci/config/wait-for-401.js https://localhost:4080/bichard
      - run:
          name: Run UI tests
          command: npm run cypress:run
          environment:
            UI_IS_HTTPS: true
            TZ: "Europe/London"
      - store_artifacts:
          path: ./cypress/videos
      - store_artifacts:
          path: ./cypress/screenshots

workflows:
  version: 2
  build-and-test:
    jobs:
      - lint
      - unit_test
      - integration_test
      - ui_test
      - build_and_e2e_test
  publish_chromatic:
    jobs:
      - publish_chromatic:
          filters:
            branches:
              only:
                - main

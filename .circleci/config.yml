version: 2.1

orbs:
  node: circleci/node@5.1.0

commands:
  ################### Helpers
  setup:
    steps:
      - checkout
      - node/install
      - run: rm -rf ~/.npm
      - node/install-packages:
          include-branch-in-cache-key: true
      - run:
          name: Clone bichard7-next-core
          command: git clone --depth 1 https://github.com/ministryofjustice/bichard7-next-core.git ~/bichard7-next-core
      - run:
          name: Clone bichard7-next-audit-logging
          command: git clone --depth 1 https://github.com/ministryofjustice/bichard7-next-audit-logging.git ~/bichard7-next-audit-logging
  
  fetch_images:
    parameters:
      IMAGES:
        default: ""
        type: string
    steps:
      - run: 
          name: "Fetch images: <<parameters.IMAGES>>"
          command: bash ./scripts/fetch-docker-images.sh <<parameters.IMAGES>>


  build_message_forwarder:
    steps:
      - run:
          name: Build message forwarder image
          working_directory: ~/bichard7-next-core
          command: docker-compose -f environment/docker-compose.yml build message-forwarder

  build_audit_logging_images:
    steps:
      - run:
          name: Build audit logging images
          working_directory: ~/bichard7-next-audit-logging
          command: make build-api-server build-event-handler-server

  run_test_chunk:
    parameters:
      NEXTUI:
        default: "false"
        type: "string"
    steps:
      - run:
          name: Run test chunk
          working_directory: ~/bichard7-next-tests
          command: |
            CHUNK=$(circleci tests glob "features/**/*.feature" | circleci tests split --split-by=timings) \
            NEXTUI=<<parameters.NEXTUI>> \
            npm run test:chunk

  ################### Services
  start_bichard7_legacy:
    steps:
      - fetch_images:
          IMAGES: nodejs
      - build_message_forwarder
      - build_audit_logging_images
      - run:
          name: Start bichard7 legacy
          working_directory: ~/bichard7-next-core
          command: npm run all-legacy
      - run:
          name: Retry - start bichard7 legacy
          working_directory: ~/bichard7-next-core
          when: on_fail
          command: |
            # TODO: add legacy compose to destroy in core
            docker-compose --project-name bichard \
              -f environment/docker-compose.yml \
              -f environment/docker-compose-bichard.yml down -v

            npm run all-legacy
    
  start_specific_core_services:
    parameters:
      SERVICES:
        default: ""
        type: string
      FLAGS:
        default: ""
        type: string
    steps:
      - run:
          name: "Run services: <<parameters.SERVICES>>"
          working_directory: ~/bichard7-next-core
          command: |
            set +e
            
            docker-compose --project-name bichard \
            -f environment/docker-compose.yml \
            up -d <<parameters.SERVICES>> <<parameters.FLAGS>>

#################################################################################

jobs:
  lint:
    docker:
      - image: cimg/node:16.12.0
    resource_class: medium
    steps:
      - setup
      - run:
          name: Check the code for linting errors
          command: npm run lint

  unit_test:
    docker:
      - image: cimg/node:16.12.0
    resource_class: medium
    steps:
      - setup
      - run:
          name: Run code-based unit tests
          command: npm run test:unit

  integration_test:
    machine:
      image: ubuntu-2004:2023.04.2
      docker_layer_caching: true
    resource_class: medium
    steps:
      - setup
      - fetch_images:
          IMAGES: nodejs 
      - build_audit_logging_images
      - start_specific_core_services:
          SERVICES: activemq localstack postgres audit-log-api
      - run:
          name: Run integration tests
          command: npm run test:integration

  cypress_component_test:
    machine:
      image: ubuntu-2004:2023.04.2
      docker_layer_caching: true
    resource_class: medium
    steps:
      - setup
      - run:
          name: Install Cypress
          command: ./.circleci/scripts/install-cypress.sh 2>&1
          background: true
      - run:
          name: Install GOV.UK Assets
          command: npm run install:assets
      - run:
          name: Wait for cypress install to finish
          command: until [ -f cypressInstalled ]; do sleep 1; done
          no_output_timeout: 10m
      - run:
          name: Retrying installing Cypress
          command: ./.circleci/scripts/install-cypress.sh
      - run:
          name: Run UI component tests
          command: npm run cypress:run:component:docker
          environment:
            UI_IS_HTTPS: true
            TZ: "Europe/London"
      - store_artifacts:
          path: ./cypress/videos
      - store_artifacts:
          path: ./cypress/screenshots

  seed_data:
    machine:
      image: ubuntu-2004:2023.04.2
      docker_layer_caching: true
    resource_class: medium
    steps:
      - setup
      - fetch_images:
          IMAGES: nodejs
      - build_audit_logging_images
      - start_specific_core_services:
          SERVICES: "postgres audit-log-api"
      - run:
          name: Run the seed-data script
          command: DEPLOY_NAME=e2e-test npm run seed-data  

  cypress_e2e_tests:
    machine:
      image: ubuntu-2004:2023.04.2
      docker_layer_caching: true
    resource_class: xlarge
    parallelism: 5
    steps:
      - setup
      - run: npm run install:assets
      - fetch_images:
          IMAGES: nodejs
      - build_audit_logging_images
      - run: ./.circleci/scripts/build-ui.sh
      - run:
          command: ./.circleci/scripts/install-cypress.sh 2>&1
          background: true
      - run:
          name: Wait for cypress install to finish
          command: until [ -f cypressInstalled ]; do sleep 1; done
          no_output_timeout: 10m
      - run:
          name: Retrying installing Cypress
          command: ./.circleci/scripts/install-cypress.sh
      - fetch_images:
          IMAGES: ui user-service nginx-auth-proxy
      - start_specific_core_services:
          SERVICES: ui user-service nginx-auth-proxy postgres activemq audit-log-api localstack
          FLAGS: --no-deps
      - run:
          name: Run UI tests
          command: ./scripts/run-ui-tests-chunk.sh
          environment:
            UI_IS_HTTPS: true
            TZ: "Europe/London"
      - store_artifacts:
          path: ./cypress/videos
      - store_artifacts:
          path: ./cypress/screenshots

  cucumber_e2e_tests:
    machine:
      image: ubuntu-2004:2023.04.2
      docker_layer_caching: true
    resource_class: xlarge
    parallelism: 10
    environment:
      STACK_TYPE: next
      WORKSPACE: local-next
      AUTH_TYPE: user-service
    steps:
      - setup
      - run: ./.circleci/scripts/build-ui.sh
      - run:
          name: Clone bichard7-next-tests
          command: git clone --depth 1 https://github.com/ministryofjustice/bichard7-next-tests.git ~/bichard7-next-tests
      - node/install-packages:
          app-dir: ~/bichard7-next-tests
          cache-path: ~/bichard7-next-tests/node_modules
          include-branch-in-cache-key: true
      - start_bichard7_legacy
      - run_test_chunk:
          NEXTUI: "true"

#################################################################################

workflows:
  build-and-test:
    jobs:
      - lint
      - unit_test
      - integration_test
      - cypress_component_test
      - seed_data

      - cypress_e2e_tests
      - cucumber_e2e_tests

